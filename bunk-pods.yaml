apiVersion: v1
kind: Pod
metadata:
  name: bunk-scaler
spec:
  containers:
  - name: ubuntu
    image: bunk:test
    command: ["/root/env/bin/python", "main.py", "--profile", "kind"]
    workingDir: "/root/bunk/scaler"
    imagePullPolicy: IfNotPresent

---
apiVersion: v1
kind: Pod
metadata:
  name: bunk-scheduler
  labels:
    app: bunk-scheduler
spec:
  containers:
  - name: ubuntu
    image: bunk:test
    command: ["/root/env/bin/python", "hypergrid.py"]
    workingDir: "/root/bunk/scheduler"
    ports:
      - containerPort: 6000
    imagePullPolicy: IfNotPresent

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admin-binding
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Service
metadata:
  name: bunk-scheduler
spec:
  selector:
    app: bunk-scheduler
  ports:
    - protocol: TCP
      port: 6000
      targetPort: 6000

---
apiVersion: v1
kind: Pod
metadata:
  name: bunk-login
spec:
  containers:
  - name: ubuntu
    image: bunk:test
    ports:
    - containerPort: 22
      name: ssh
    securityContext:
      capabilities:
        add:
        - SYS_ADMIN
    imagePullPolicy: IfNotPresent

---
apiVersion: v1
kind: Pod
metadata:
  name: bunk-nfs
  labels:
    app: bunk-nfs
spec:
  volumes:
  - name: work
    hostPath:
      path: /work
  containers:
  - name: ubuntu
    image: bunk:test
    volumeMounts:
      - name: work
        mountPath: /work
    ports:
    - containerPort: 2049
      name: nfs
    command: ["/bin/bash", "-c"]
    args:
      - |
        service rpcbind start;
        service nfs-kernel-server start;
        tail -f /dev/null;
    securityContext:
      privileged: true

---
apiVersion: v1
kind: Service
metadata:
  name: bunk-nfs
spec:
  ports:
  - name: nfs
    port: 2049
  - name: mountd
    port: 20048
  - name: rpcbind
    port: 111
  selector:
    app: bunk-nfs
